Philosophers
objectif: 16 novembre

1. Découper lister (important savoir ce que je dois faire pour avancer)
2. Comprendre
3. Start

learning process:
- voir les notions
- prise de notes
- reformuler
- refaire et tester

apprendre beaucoup + les notions dans chaque projet

consigne:
• One or more philosophers sit at a round table.
There is a large bowl of spaghetti in the middle of the table.
• The philosophers alternatively eat, think, or sleep.
While they are eating, they are not thinking nor sleeping;
while thinking, they are not eating nor sleeping;
and, of course, while sleeping, they are not eating nor thinking.
• There are also forks on the table. There are as many forks as philosophers.
• Because serving and eating spaghetti with only one fork is very inconvenient, a
philosopher takes their right and their left forks to eat, one in each hand.
• When a philosopher has finished eating, they put their forks back on the table and
start sleeping. Once awake, they start thinking again. The simulation stops when
a philosopher dies of starvation.
• Every philosopher needs to eat and should never starve.
• Philosophers don’t speak with each other.
• Philosophers don’t know if another philosopher is about to die.
• No need to say that philosophers should avoid dying!


marche a suivre modifiable:

1. overview video ou chatgpt medium (comprendre le pb) ✅
petite recherche de base notions (threads mutex conditions d'attente)✅
comprendre le probleme en gros découper les étapes en gros✅
designer/chercher une reponse au probleme✅
pseudo code(structure du projet)✅
lister les notions importantes✅
coder une version simple du projet
faire une recherche en profondeur et implementer dans le code
implementer les etapes manquantes




Notions:
Threads ✅
mutex ✅
deadlocks✅
race conditions ✅
fichiers json debuggage
semaphores
conditons d'attentes

fonctions:
gettimeofday
pthread_create
pthread_join
pthread_detach
pthread_mutex (all)

etapes version simplifiee:
parser: nb neg

creer une structure data avec tous les inputs nb_philo time_to_die ...✅
creer une structure philo pour chaque thread qui contient la fourchette de droite et de gauche + un pointeur vers data qui permet d'avoir acces au parametres✅
allouer de la memoire pour chaque structure philo et lier chaque thread a un structure philo✅
allouer de la memoire pour les fourchettes mutex✅
assigner les bonnes fourchettes aux philo✅

lancer la simulation
faire manger les paires time_to_eat
 






sources:
mia combeau blog: https://www.codequoi.com/
medium article: https://medium.com/@jalal92/the-dining-philosophers-7157cc05315
youtube: https://www.youtube.com/watch?v=UGQsvVKwe90
youtube oceano






notions:
voir
reformuler expliquer
tester

new guideline:
overview projet✅
decoupage du probleme en gros formuler✅
notions a connaitres voir reformuler✅
version simplifiee
implementer le reste



parsing
monitor copy

faire les changements necessaires pour que ca marche avec le monitor
tester

essayer de le finir
oceanos philosophers

decouper
calmement
comprendre je suis capable
